---
- hosts: all
  sudo: True
  roles:
    - chrony

- hosts: controller:compute
  sudo: True
  roles:
    - docker

- hosts: controller
  sudo: True
  roles:
    - mysql
    - rabbitmq-server
    - keystone
    - glance
    - nova-controller
    - neutron-controller
    - horizon

- hosts: network
  sudo: True
  roles:
    - neutron-network

- hosts: compute
  sudo: True
  roles:
    - nova-compute-docker

- hosts: controller:compute
  sudo: True
  tasks:

    - name: ensure that docker is configured to use http_proxy
      lineinfile:
        dest: /etc/default/docker
        line: export http_proxy="{{ lookup('ENV', 'http_proxy') }}"
        regexp: export http_proxy=
        state: present
      register: docker_http_proxy

    - name: ensure that docker is configured to use http_proxy
      lineinfile:
        dest: /etc/default/docker
        line: export HTTP_PROXY="{{ lookup('ENV', 'http_proxy') }}"
        regexp: export HTTP_PROXY=
        insertafter: export http_proxy=
        state: present
      register: docker_big_http_proxy

    - name: restart docker if necessary
      service:
        name: docker
        state: restarted
      when: docker_http_proxy|changed or docker_big_http_proxy|changed

    - name: ensure that login user is in the docker group
      user:
        name: "{{ ansible_ssh_user }}"
        groups: docker
        append: yes
        state: present

    - name: ensure that pip is installed
      shell: curl -s https://bootstrap.pypa.io/get-pip.py | python -
             creates=/usr/local/bin/pip

    - name: ensure docker client libraries are installed
      pip:
        name: docker-py
        state: latest

    - name: ensure docker image build directories exist
      file:
        path: "{{ item }}"
        owner: "{{ ansible_ssh_user }}"
        state: directory
      with_items:
        - "{{ ansible_env.PWD }}/.ansible_cache"
        - "{{ ansible_env.PWD }}/.ansible_cache/dockerbuild"

    - name: copy ubuntu image to remote system
      copy:
        src: docker/ubuntu-14_04.tar.xz
        dest: "{{ ansible_env.PWD }}/.ansible_cache/dockerbuild/"

    - name: register list of docker images
      environment:
        http_proxy: ''
      command: docker images
      register: docker_image_check
      changed_when: false

    - name: load ubuntu image if necessary
      environment:
        http_proxy: ''
      shell: xzcat {{ ansible_env.PWD }}/.ansible_cache/dockerbuild/ubuntu-14_04.tar.xz | docker load
      when: -1 == docker_image_check.stdout.find("ubuntu")

    - name: clone docker phusion/baseimage repository to remote system
      git:
        repo: https://github.com/phusion/baseimage-docker.git
        dest: "{{ ansible_env.PWD }}/.ansible_cache/dockerbuild/phusion_baseimage-docker"

    - name: ensure docker phusion/baseimage image has been built
      docker_image:
        name: phusion/baseimage
        path: "{{ ansible_env.PWD }}/.ansible_cache/dockerbuild/phusion_baseimage-docker/image"
        state: present

    - name: clone docker marklee77/docker-baseimage-cloud repository to remote system
      git:
        repo: https://github.com/marklee77/docker-baseimage-cloud.git
        dest: "{{ ansible_env.PWD }}/.ansible_cache/dockerbuild/marklee77_docker-baseimage-cloud"

    - name: ensure docker marklee77/baseimage-cloud image has been built
      docker_image:
        name: marklee77/baseimage-cloud
        path: "{{ ansible_env.PWD }}/.ansible_cache/dockerbuild/marklee77_docker-baseimage-cloud"
        state: present

